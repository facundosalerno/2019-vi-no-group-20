-Dividir mas los test.

-En las últimas excepciones que hicimos en los test de prenda conviene el try catch para verificar que no quede el borrador inconsistente.

-No es buena idea que el borrador tenga getters 

-Para probar el borrador hacer directo la prenda y ver que no rompa

-No testear con NullPointerException

-Hacer test mas específicos de por ej excepción de dominio (tipo prenda invalida). Probar cosas invalidas y que rompan con excepción (al crear y definir)

-Sacar todo lo del test get color primario y eso. 

-Hacer un Init no tan especifico y que el resto este dentro del test

-Cambiar nombre, guardarropa verano/invierno que sea diferente.

-(No tan importante) Crear método dentro del test para armar los borradores y no poner tantas veces lo mismo en el init. Un método que no dice test.

-Que sugerir sea sugerirAtuendo

-No hacer test con or.

-Testear mas cosas, tipo que pasa si el guardarropa no tiene nada, que pasa si solo tiene pantalón, que elementos debe dar…

-Crear excepción de guardarropas

-Hacer test que pruebe que la sugerencia da la sugerencia deseada

-Que la prenda no este copiada y en cambio sea inmutable

-Falta lo de accesorios en el guardarropa

-Poner el método esCategoría en vez del test catergoria ==….

-En vez del esIgual hacer el equal y hashcode

-En borrador una excepción mas especifica que el null

-Delegar en el test que vemos si el atuendo es valido, no usar “get categoria”  cambiarlo por esSuperior, esInferior

-Tag project encoding maven 

